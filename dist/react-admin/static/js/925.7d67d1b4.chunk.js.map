{"version":3,"file":"static/js/925.7d67d1b4.chunk.js","mappings":"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","sources":["utils/axios.ts","api/index.ts","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","pages/Role/index.tsx","utils/global.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport global from \"./global\";\r\nimport { message } from \"antd\";\r\nconst instance = axios.create({\r\n    // baseUrl: \"http://\",\r\n    // timeout: 30000,\r\n});\r\ninstance.interceptors.request.use((request: any) => {\r\n    if (!request.url.includes(\"/v3/\")) request.url = \"/v1_0\" + request.url;\r\n\r\n    if (global.getStorage(\"tokenName\") && global.getStorage(\"tokenValue\")) {\r\n        request.headers[\"Authorization\"] =\r\n            global.getStorage(\"tokenName\") +\r\n            \" \" +\r\n            `${global.getStorage(\"tokenValue\")}`;\r\n    }\r\n\r\n    if (\r\n        request.data &&\r\n        request.headers[\"Content-Type\"] !== \"multiple/form-data\" &&\r\n        request.headers[\"Content-Type\"] !== \"application/json\" &&\r\n        (request.headers[\"Content-Type\"] ===\r\n            \"application/x-www-form-urlencoded\" ||\r\n            request.method === \"post\")\r\n    ) {\r\n        request.data = qs.stringify(request.data, {\r\n            allowDots: true,\r\n        });\r\n    }\r\n    if (request.method === \"get\")\r\n        request.params = { ...request.params, time: new Date().getTime() };\r\n    return request;\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response: any) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            if (response.data.code === 401) {\r\n                message.error(response.data.error);\r\n            } else if (response.data.code >= -1 && response.data.code <= -1) {\r\n                window.location.href = \"/login\";\r\n            }\r\n            return response.data;\r\n        }\r\n    },\r\n    (err: any) => {\r\n        message.error(err.message);\r\n        throw new Error(\"网络错误\");\r\n    }\r\n);\r\n\r\nexport { instance };\r\n","import { instance } from \"../utils/axios\";\r\n\r\nexport const userLogin = (data: object) => {\r\n    return instance({\r\n        url: \"/login/doLogin\",\r\n        method: \"POST\",\r\n        data,\r\n    });\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n    return instance.get(\"/system/user/current/user\");\r\n};\r\n\r\nexport const getWeather = (city: string) => {\r\n    return instance.get(\r\n        \"/v3/weather/weatherInfo?key=6d78e0a70cbe6fc669f1a0705a85a5b5&city=\" +\r\n            city\r\n    );\r\n};\r\n\r\nexport const getLocalPosition = () => {\r\n    return instance.get(\"/v3/ip?key=6d78e0a70cbe6fc669f1a0705a85a5b5\");\r\n};\r\n\r\nexport const getRoleListPage = (params: Object) => {\r\n    return instance.get(\"/system/role/page\", { params });\r\n};\r\n\r\nexport const getRoleList = (params: Object) => {\r\n    return instance.get(\"/system/role/list\", { params });\r\n};\r\n\r\nexport const saveRole = (params: Object) => {\r\n    return instance.post(\"/system/role/save\", params);\r\n};\r\n\r\nexport const updateRole = (params: Object) => {\r\n    return instance.post(\"/system/role/update\", params);\r\n};\r\n\r\nexport const deleteRole = (id: string) => {\r\n    return instance.delete(\"/system/role/remove\", { params: { ids: id } });\r\n};\r\n\r\nexport const relationApi = (params: Object) => {\r\n    return instance.post(\"/system/role/relation/api\", params);\r\n};\r\n\r\nexport const getUserList = (params: Object) => {\r\n    return instance.get(\"/system/user/page\", { params });\r\n};\r\n\r\nexport const saveUser = (params: Object) => {\r\n    return instance.post(\"/system/user/save\", params);\r\n};\r\n\r\nexport const changeUserType = (params: Object) => {\r\n    return instance.post(\"/system/user/page\", params);\r\n};\r\n\r\nexport const resetUser = (id: string) => {\r\n    return instance.post(\"/system/user/reset/password\", { id });\r\n};\r\n\r\nexport const deleteUser = (id: string) => {\r\n    return instance.delete(\"/system/user/remove\", { params: { ids: id } });\r\n};\r\n\r\nexport const disableUser = (params: Object) => {\r\n    return instance.post(\"/system/user/disable\", params);\r\n};\r\n\r\nexport const getAuthorityPage = (params: Object) => {\r\n    return instance.get(\"/system/api/page\", { params });\r\n};\r\n\r\nexport const getAuthorityList = (params: Object) => {\r\n    return instance.get(\"/system/api/list\", { params });\r\n};\r\n\r\nexport const refreshAuthorityList = () => {\r\n    return instance.get(\"/system/api/refresh\");\r\n};\r\n\r\nexport const relationRole = (params: Object) => {\r\n    return instance.post(\"/system/user/relation/role\", params);\r\n};\r\n\r\nexport const getLogPage = (params: Object) => {\r\n    return instance.get(\"/system/logs/page\", { params });\r\n};\r\n","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Popconfirm,\r\n    Space,\r\n    Form,\r\n    message,\r\n    Modal,\r\n    Input,\r\n    Transfer,\r\n} from \"antd\";\r\nimport type { TransferDirection } from \"antd/es/transfer\";\r\nimport type { ColumnsType } from \"antd/lib/table\";\r\nimport moment from \"moment\";\r\nimport {\r\n    getRoleListPage,\r\n    saveRole,\r\n    updateRole,\r\n    deleteRole,\r\n    relationApi,\r\n    getAuthorityList,\r\n} from \"api\";\r\nimport \"./index.scss\";\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    PlusOutlined,\r\n    ApiOutlined,\r\n} from \"@ant-design/icons\";\r\nconst { Search } = Input;\r\n\r\nexport default function Role() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [relationVisible, setRelationVisible] = useState(false);\r\n    const [articleTableData, setAticleTableData] = useState({\r\n        list: [],\r\n        count: 0,\r\n    });\r\n    const [params, setParams] = useState({\r\n        current: 1,\r\n        roleName: \"\",\r\n        size: 10,\r\n    });\r\n\r\n    const [roleList, setRoleList] = useState<RecordType[]>([]);\r\n    const [roleSearch, setRoleSearch] = useState<string>();\r\n    const [userInfo, setUserInfo] = useState({} as UserInfoType);\r\n    const [targetKeys, setTargetKeys] = useState<string[]>([]);\r\n    const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\r\n\r\n    const [form] = Form.useForm();\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 15 },\r\n    };\r\n    interface DataType {\r\n        id: string;\r\n        index: number;\r\n        roleName: string;\r\n        roleFlag: string;\r\n        createdTime: string;\r\n        updatedTime: string;\r\n        createdBy: string;\r\n        updatedBy: string;\r\n    }\r\n    interface RecordType {\r\n        key: string;\r\n        apiName: string;\r\n        disable: boolean;\r\n    }\r\n    interface UserInfoType {\r\n        id: string;\r\n        username: string;\r\n        disable: boolean;\r\n    }\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"index\",\r\n            width: 80,\r\n            fixed: \"left\",\r\n\r\n            render: (text: any, record: any, index: number) =>\r\n                `${(params.current - 1) * params.size + index + 1}`,\r\n        },\r\n        {\r\n            title: \"角色名称\",\r\n            dataIndex: \"roleName\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"角色拼音\",\r\n            dataIndex: \"roleFlag\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            width: 180,\r\n            dataIndex: \"createdTime\",\r\n            render: (text: any) => moment(text).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            width: 180,\r\n            dataIndex: \"updatedTime\",\r\n            render: (text: any) =>\r\n                text ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"\",\r\n        },\r\n        {\r\n            title: \"创建人\",\r\n            width: 180,\r\n            dataIndex: \"createdBy\",\r\n        },\r\n        {\r\n            title: \"更新人\",\r\n            width: 180,\r\n            dataIndex: \"updatedBy\",\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            align: \"center\",\r\n            fixed: \"right\",\r\n            width: 160,\r\n            render: (item) => (\r\n                <div className=\"control-group\">\r\n                    <Space size=\"middle\">\r\n                        <Button\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            icon={<EditOutlined />}\r\n                            onClick={() => {\r\n                                edit(item);\r\n                            }}\r\n                        ></Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            icon={<ApiOutlined />}\r\n                            onClick={() => {\r\n                                relation(item);\r\n                            }}\r\n                        ></Button>\r\n                        <Popconfirm\r\n                            title=\"确认删除？\"\r\n                            placement=\"left\"\r\n                            onConfirm={() => {\r\n                                confirm(item);\r\n                            }}\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                shape=\"circle\"\r\n                                icon={<DeleteOutlined />}\r\n                            ></Button>\r\n                        </Popconfirm>\r\n                    </Space>\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const relationCancel = () => {\r\n        form.resetFields();\r\n        setRelationVisible(false);\r\n    };\r\n\r\n    const edit = (item: any) => {\r\n        setVisible(true);\r\n        form.setFieldsValue({ ...item });\r\n    };\r\n\r\n    const relation = (item: any) => {\r\n        setUserInfo(item);\r\n        getAuthorityList({ roleId: item.id }).then((res: any) => {\r\n            if (res.code == 200) {\r\n                let arr = res.data.map((item: any) => {\r\n                    item.key = item.id;\r\n                    return item;\r\n                });\r\n                let arr2 = res.data\r\n                    .filter((item: any) => item.disabled)\r\n                    .map((item: any) => {\r\n                        item.key = item.id;\r\n                        item.disabled = !item.disabled;\r\n                        return item.key;\r\n                    });\r\n\r\n                setRoleList(arr);\r\n                setTargetKeys(arr2);\r\n            } else {\r\n                message.error(res.error);\r\n            }\r\n        });\r\n        setRelationVisible(true);\r\n    };\r\n\r\n    const onFinish = (values: any) => {\r\n        setConfirmLoading(true);\r\n        let id = form.getFieldValue(\"id\");\r\n        if (id) {\r\n            updateRole({ ...values, id })\r\n                .then((res: any) => {\r\n                    if (res.code == 200) {\r\n                        setVisible(false);\r\n                        setParams({ ...params, current: 1 });\r\n                        message.success(\"保存成功\");\r\n                    } else {\r\n                        message.error(res.error);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    setConfirmLoading(false);\r\n                });\r\n        } else {\r\n            saveRole(values)\r\n                .then((res: any) => {\r\n                    if (res.code == 200) {\r\n                        setVisible(false);\r\n                        setParams({ ...params, current: 1 });\r\n                        message.success(\"保存成功\");\r\n                    } else {\r\n                        message.error(res.error);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    setConfirmLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const relationApiSubmit = () => {\r\n        relationApi({\r\n            roleId: userInfo.id,\r\n            apiIds: targetKeys?.join(\",\"),\r\n        }).then((res: any) => {\r\n            if (res.code == 200) {\r\n                message.success(\"绑定成功\");\r\n                setRelationVisible(false);\r\n                setParams({ ...params, current: 1 });\r\n            } else {\r\n                message.error(res.error);\r\n            }\r\n        });\r\n    };\r\n\r\n    const onChange = (\r\n        newTargetKeys: string[],\r\n        direction: TransferDirection,\r\n        moveKeys: string[]\r\n    ) => {\r\n        setTargetKeys(newTargetKeys);\r\n    };\r\n\r\n    const onSelectChange = (\r\n        sourceSelectedKeys: string[],\r\n        targetSelectedKeys: string[]\r\n    ) => {\r\n        setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n    };\r\n\r\n    const relationSearch = (item: string) => {\r\n        setRoleSearch(item);\r\n    };\r\n\r\n    const onSearch = (roleName: string) => {\r\n        setParams({ ...params, roleName });\r\n    };\r\n\r\n    const pageChange = (current: number) => {\r\n        setParams({ ...params, current });\r\n    };\r\n\r\n    const confirm = (item: any) => {\r\n        deleteRole(item.id).then((res: any) => {\r\n            if (res.code == 200) {\r\n                message.success(\"删除成功\");\r\n                setParams({ ...params, current: 1 });\r\n            } else {\r\n                message.error(res.error);\r\n            }\r\n        });\r\n    };\r\n\r\n    const getData = async () => {\r\n        const res: any = await getRoleListPage({\r\n            ...params,\r\n            roleName: params.roleName || undefined,\r\n        });\r\n        if (res.code == 200) {\r\n            const { records, total } = res;\r\n            setAticleTableData({\r\n                list: records,\r\n                count: total,\r\n            });\r\n        } else {\r\n            message.error(res.error);\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getData();\r\n    }, [params]);\r\n    return (\r\n        <>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"\">首页</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"\">角色管理</a>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Card style={{ width: \"100%\", marginTop: 20, overflow: \"hidden\" }}>\r\n                <Search\r\n                    placeholder=\"请输入角色名称\"\r\n                    loading={loading}\r\n                    enterButton\r\n                    onSearch={onSearch}\r\n                />\r\n            </Card>\r\n            <Card\r\n                style={{ width: \"100%\", marginTop: 20, overflow: \"hidden\" }}\r\n                loading={loading}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        marginBottom: 25,\r\n                    }}\r\n                >\r\n                    <p style={{ marginBottom: 0 }}>\r\n                        根据筛选条件共查询到{articleTableData.count}条结果\r\n                    </p>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => {\r\n                            setVisible(true);\r\n                        }}\r\n                    >\r\n                        新增\r\n                    </Button>\r\n                </div>\r\n                <Table\r\n                    className=\"menuMainTainTable\"\r\n                    columns={columns}\r\n                    dataSource={articleTableData.list || []}\r\n                    scroll={{ x: 1300 }}\r\n                    pagination={{\r\n                        pageSize: params.size,\r\n                        current: params.current,\r\n                        onChange: pageChange,\r\n                        total: articleTableData.count,\r\n                        showSizeChanger: false,\r\n                    }}\r\n                    rowKey={(record) => record.id}\r\n                />\r\n            </Card>\r\n            <Modal\r\n                title={form.getFieldValue(\"id\") ? \"编辑\" : \"新增\"}\r\n                visible={visible}\r\n                onOk={() => form.submit()}\r\n                onCancel={() => setVisible(false)}\r\n                afterClose={() => form.resetFields()}\r\n                confirmLoading={confirmLoading}\r\n                forceRender\r\n                okText=\"确定\"\r\n                cancelText=\"取消\"\r\n            >\r\n                <Form {...layout} form={form} onFinish={onFinish}>\r\n                    <Form.Item\r\n                        name=\"roleName\"\r\n                        label=\"角色名称\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"请输入角色名称\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"请输入角色名称\" />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            <Modal\r\n                title=\"绑定Api\"\r\n                visible={relationVisible}\r\n                onOk={() => relationApiSubmit()}\r\n                bodyStyle={{ display: \"flex\", justifyContent: \"center\" }}\r\n                onCancel={relationCancel}\r\n                width=\"750px\"\r\n                confirmLoading={confirmLoading}\r\n                forceRender\r\n                okText=\"确定\"\r\n                cancelText=\"取消\"\r\n            >\r\n                <Transfer\r\n                    dataSource={roleList}\r\n                    targetKeys={targetKeys}\r\n                    onChange={onChange}\r\n                    showSearch\r\n                    onSearch={relationSearch}\r\n                    selectedKeys={selectedKeys}\r\n                    onSelectChange={onSelectChange}\r\n                    render={(item) => item.apiName}\r\n                    pagination\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","const global = {\r\n    getCookie(key: any) {\r\n        const data = document.cookie;\r\n\r\n        let startIndex = data.indexOf(key + \"=\");\r\n\r\n        if (startIndex > -1) {\r\n            startIndex = startIndex + key.length + 1;\r\n\r\n            let endIndex = data.indexOf(\";\", startIndex);\r\n\r\n            endIndex = endIndex < 0 ? data.length : endIndex;\r\n\r\n            return decodeURIComponent(data.substring(startIndex, endIndex));\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    setCookie(key: any, value: any, time?: any) {\r\n        const times = time;\r\n        const cur = new Date();\r\n        cur.setTime(cur.getTime() + times * 24 * 3600 * 1000);\r\n        document.cookie =\r\n            key +\r\n            \"=\" +\r\n            encodeURIComponent(value) +\r\n            \";expires=\" +\r\n            (times === undefined ? \"\" : cur.toUTCString());\r\n    },\r\n\r\n    delCookie(key: any) {\r\n        const data = this.getCookie(key);\r\n\r\n        if ((data as any) !== false) {\r\n            this.setCookie(key, data, -1);\r\n        }\r\n    },\r\n\r\n    getStorage(key: string) {\r\n        return localStorage.getItem(key);\r\n    },\r\n\r\n    setStorage(key: string, value: any) {\r\n        return localStorage.setItem(key, value);\r\n    },\r\n\r\n    delStorage(key: string) {\r\n        localStorage.removeItem(key);\r\n    },\r\n};\r\n\r\nexport default global;\r\n"],"names":["instance","axios","interceptors","request","use","url","includes","global","headers","data","method","qs","allowDots","params","time","Date","getTime","response","status","code","message","error","window","location","href","err","Error","userLogin","getUserInfo","getWeather","city","getLocalPosition","getRoleListPage","getRoleList","saveRole","updateRole","deleteRole","id","ids","relationApi","getUserList","saveUser","resetUser","deleteUser","disableUser","getAuthorityPage","getAuthorityList","refreshAuthorityList","relationRole","getLogPage","EditOutlined","props","ref","React","AntdIcon","_objectSpread","icon","EditOutlinedSvg","displayName","Search","Input","Role","useState","loading","setLoading","confirmLoading","setConfirmLoading","visible","setVisible","relationVisible","setRelationVisible","list","count","articleTableData","setAticleTableData","current","roleName","size","setParams","roleList","setRoleList","setRoleSearch","userInfo","setUserInfo","targetKeys","setTargetKeys","selectedKeys","setSelectedKeys","Form","form","columns","title","dataIndex","width","fixed","render","text","record","index","moment","format","align","item","className","type","shape","onClick","edit","ApiOutlined","relation","placement","onConfirm","confirm","okText","cancelText","danger","DeleteOutlined","setFieldsValue","roleId","then","res","arr","map","key","arr2","filter","disabled","getData","undefined","records","total","useEffect","style","marginTop","overflow","placeholder","enterButton","onSearch","display","alignItems","justifyContent","marginBottom","PlusOutlined","dataSource","scroll","x","pagination","pageSize","onChange","showSizeChanger","rowKey","getFieldValue","onOk","submit","onCancel","afterClose","resetFields","forceRender","labelCol","span","wrapperCol","onFinish","values","finally","name","label","rules","required","apiIds","join","bodyStyle","newTargetKeys","direction","moveKeys","showSearch","onSelectChange","sourceSelectedKeys","targetSelectedKeys","apiName","getCookie","document","cookie","startIndex","indexOf","length","endIndex","decodeURIComponent","substring","setCookie","value","times","cur","setTime","encodeURIComponent","toUTCString","delCookie","this","getStorage","localStorage","getItem","setStorage","setItem","delStorage","removeItem"],"sourceRoot":""}