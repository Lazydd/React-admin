{"version":3,"file":"static/js/755.4bd4f670.chunk.js","mappings":"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","sources":["utils/axios.ts","api/index.ts","pages/Log/index.tsx","utils/global.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport global from \"./global\";\r\nimport { message } from \"antd\";\r\nconst instance = axios.create({\r\n    // baseUrl: \"http://\",\r\n    // timeout: 30000,\r\n});\r\ninstance.interceptors.request.use((request: any) => {\r\n    if (!request.url.includes(\"/v3/\")) request.url = \"/v1_0\" + request.url;\r\n\r\n    if (global.getStorage(\"tokenName\") && global.getStorage(\"tokenValue\")) {\r\n        request.headers[\"Authorization\"] =\r\n            global.getStorage(\"tokenName\") +\r\n            \" \" +\r\n            `${global.getStorage(\"tokenValue\")}`;\r\n    }\r\n\r\n    if (\r\n        request.data &&\r\n        request.headers[\"Content-Type\"] !== \"multiple/form-data\" &&\r\n        request.headers[\"Content-Type\"] !== \"application/json\" &&\r\n        (request.headers[\"Content-Type\"] ===\r\n            \"application/x-www-form-urlencoded\" ||\r\n            request.method === \"post\")\r\n    ) {\r\n        request.data = qs.stringify(request.data, {\r\n            allowDots: true,\r\n        });\r\n    }\r\n    if (request.method === \"get\")\r\n        request.params = { ...request.params, time: new Date().getTime() };\r\n    return request;\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response: any) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            if (response.data.code === 401) {\r\n                message.error(response.data.error);\r\n            } else if (response.data.code >= -1 && response.data.code <= -1) {\r\n                window.location.href = \"/login\";\r\n            }\r\n            return response.data;\r\n        }\r\n    },\r\n    (err: any) => {\r\n        message.error(err.message);\r\n        throw new Error(\"网络错误\");\r\n    }\r\n);\r\n\r\nexport { instance };\r\n","import { instance } from \"../utils/axios\";\r\n\r\nexport const userLogin = (data: object) => {\r\n    return instance({\r\n        url: \"/login/doLogin\",\r\n        method: \"POST\",\r\n        data,\r\n    });\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n    return instance.get(\"/system/user/current/user\");\r\n};\r\n\r\nexport const getWeather = (city: string) => {\r\n    return instance.get(\r\n        \"/v3/weather/weatherInfo?key=6d78e0a70cbe6fc669f1a0705a85a5b5&city=\" +\r\n            city\r\n    );\r\n};\r\n\r\nexport const getLocalPosition = () => {\r\n    return instance.get(\"/v3/ip?key=6d78e0a70cbe6fc669f1a0705a85a5b5\");\r\n};\r\n\r\nexport const getRoleListPage = (params: Object) => {\r\n    return instance.get(\"/system/role/page\", { params });\r\n};\r\n\r\nexport const getRoleList = (params: Object) => {\r\n    return instance.get(\"/system/role/list\", { params });\r\n};\r\n\r\nexport const saveRole = (params: Object) => {\r\n    return instance.post(\"/system/role/save\", params);\r\n};\r\n\r\nexport const updateRole = (params: Object) => {\r\n    return instance.post(\"/system/role/update\", params);\r\n};\r\n\r\nexport const deleteRole = (id: string) => {\r\n    return instance.delete(\"/system/role/remove\", { params: { ids: id } });\r\n};\r\n\r\nexport const relationApi = (params: Object) => {\r\n    return instance.post(\"/system/role/relation/api\", params);\r\n};\r\n\r\nexport const getUserList = (params: Object) => {\r\n    return instance.get(\"/system/user/page\", { params });\r\n};\r\n\r\nexport const saveUser = (params: Object) => {\r\n    return instance.post(\"/system/user/save\", params);\r\n};\r\n\r\nexport const changeUserType = (params: Object) => {\r\n    return instance.post(\"/system/user/page\", params);\r\n};\r\n\r\nexport const resetUser = (id: string) => {\r\n    return instance.post(\"/system/user/reset/password\", { id });\r\n};\r\n\r\nexport const deleteUser = (id: string) => {\r\n    return instance.delete(\"/system/user/remove\", { params: { ids: id } });\r\n};\r\n\r\nexport const disableUser = (params: Object) => {\r\n    return instance.post(\"/system/user/disable\", params);\r\n};\r\n\r\nexport const getAuthorityPage = (params: Object) => {\r\n    return instance.get(\"/system/api/page\", { params });\r\n};\r\n\r\nexport const getAuthorityList = (params: Object) => {\r\n    return instance.get(\"/system/api/list\", { params });\r\n};\r\n\r\nexport const refreshAuthorityList = () => {\r\n    return instance.get(\"/system/api/refresh\");\r\n};\r\n\r\nexport const relationRole = (params: Object) => {\r\n    return instance.post(\"/system/user/relation/role\", params);\r\n};\r\n\r\nexport const getLogPage = (params: Object) => {\r\n    return instance.get(\"/system/logs/page\", { params });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    Card,\r\n    Button,\r\n    Table,\r\n    message,\r\n    Tooltip,\r\n    Modal,\r\n    Input,\r\n    Empty,\r\n} from \"antd\";\r\nimport type { ColumnsType } from \"antd/lib/table\";\r\nimport moment from \"moment\";\r\nimport ReactJson from \"react-json-view\";\r\nimport \"./index.scss\";\r\n\r\nimport { getLogPage } from \"api\";\r\nconst { Search } = Input;\r\n\r\nexport default function Authority() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [response, setResponse] = useState({});\r\n    const [title, setTitle] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const [logTableData, setLogTableData] = useState({\r\n        list: [],\r\n        count: 0,\r\n    });\r\n    const [params, setParams] = useState({\r\n        current: 1,\r\n        size: 10,\r\n        likeKey: \"\",\r\n    });\r\n\r\n    interface DataType {\r\n        id: string;\r\n        index: number;\r\n        browser: string;\r\n        content: string;\r\n        requestMethod: string;\r\n        requestParameter: string;\r\n        name: string;\r\n        ip: string;\r\n        ipAddress: string;\r\n        operator: string;\r\n        platform: string;\r\n        url: string;\r\n        timeConsuming: string;\r\n        createdBy: string;\r\n        updatedBy: string;\r\n        updatedTime: string;\r\n        createdTime: string;\r\n    }\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"index\",\r\n            fixed: \"left\",\r\n            width: 80,\r\n            align: \"center\",\r\n            render: (text: any, record: any, index: number) =>\r\n                `${(params.current - 1) * params.size + index + 1}`,\r\n        },\r\n\r\n        {\r\n            title: \"接口名称\",\r\n            dataIndex: \"name\",\r\n            fixed: \"left\",\r\n            width: 150,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"请求方式\",\r\n            dataIndex: \"requestMethod\",\r\n            width: 120,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: \"请求参数\",\r\n            dataIndex: \"requestParameter\",\r\n            width: 180,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Button onClick={() => getContent(text, \"请求参数\")}>\r\n                    参数\r\n                </Button>\r\n            ),\r\n        },\r\n        {\r\n            title: \"接口地址\",\r\n            dataIndex: \"url\",\r\n            width: 180,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: \"耗时(毫秒)\",\r\n            dataIndex: \"timeConsuming\",\r\n            width: 150,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: \"异常与响应内容\",\r\n            dataIndex: \"content\",\r\n            width: 150,\r\n            render: (text: any) => (\r\n                <Button onClick={() => getContent(text, \"异常与响应内容\")}>\r\n                    响应\r\n                </Button>\r\n            ),\r\n        },\r\n        {\r\n            title: \"操作人\",\r\n            dataIndex: \"operator\",\r\n            width: 150,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"平台\",\r\n            dataIndex: \"platform\",\r\n            width: 150,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"浏览器\",\r\n            dataIndex: \"browser\",\r\n            width: 150,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: \"IP\",\r\n            dataIndex: \"ip\",\r\n            width: 150,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: \"IP来源\",\r\n            dataIndex: \"ipAddress\",\r\n            width: 150,\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"接口权限标识\",\r\n            dataIndex: \"apiFlag\",\r\n            width: 150,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            title: \"创建人\",\r\n            width: 150,\r\n            dataIndex: \"createdBy\",\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"更新人\",\r\n            width: 150,\r\n            dataIndex: \"updatedBy\",\r\n            align: \"center\",\r\n            ellipsis: {\r\n                showTitle: false,\r\n            },\r\n            render: (text: any) => (\r\n                <Tooltip placement=\"topLeft\" title={text}>\r\n                    {text}\r\n                </Tooltip>\r\n            ),\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            width: 200,\r\n            dataIndex: \"updatedTime\",\r\n            align: \"center\",\r\n            render: (text: any) => (\r\n                <span>\r\n                    {text ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"\"}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            width: 200,\r\n            dataIndex: \"createdTime\",\r\n            align: \"center\",\r\n            render: (text: any) => (\r\n                <span>\r\n                    {text ? moment(text).format(\"YYYY-MM-DD HH:mm:ss\") : \"\"}\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const onSearch = (likeKey: any) => {\r\n        setParams({ ...params, likeKey, current: 1 });\r\n    };\r\n\r\n    const pageChange = (current: number) => {\r\n        setParams({ ...params, current });\r\n    };\r\n\r\n    const getContent = (text: string, title: string) => {\r\n        setResponse(JSON.parse(text));\r\n        setTitle(title);\r\n        setVisible(true);\r\n    };\r\n\r\n    const getData = async () => {\r\n        getLogPage({\r\n            ...params,\r\n            likeKey: params.likeKey ? params.likeKey : undefined,\r\n        })\r\n            .then((res: any) => {\r\n                if (res.code == 200) {\r\n                    setLogTableData({\r\n                        list: res.records,\r\n                        count: res.total,\r\n                    });\r\n                } else {\r\n                    message.error(res.error);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getData();\r\n    }, [params]);\r\n    return (\r\n        <>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"\">首页</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"\">日志管理</a>\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Card style={{ width: \"100%\", marginTop: 20, overflow: \"hidden\" }}>\r\n                <Search\r\n                    placeholder=\"请输入接口名称、请求方式、接口地址等...\"\r\n                    loading={loading}\r\n                    enterButton\r\n                    onSearch={onSearch}\r\n                />\r\n            </Card>\r\n            <Card\r\n                style={{ width: \"100%\", marginTop: 20, overflow: \"hidden\" }}\r\n                loading={loading}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        marginBottom: 25,\r\n                    }}\r\n                >\r\n                    <p style={{ marginBottom: 0 }}>\r\n                        根据筛选条件共查询到{logTableData.count}条结果\r\n                    </p>\r\n                </div>\r\n                <Table\r\n                    className=\"menuMainTainTable\"\r\n                    columns={columns}\r\n                    dataSource={logTableData.list || []}\r\n                    scroll={{ x: 1300 }}\r\n                    pagination={{\r\n                        pageSize: params.size,\r\n                        current: params.current,\r\n                        onChange: pageChange,\r\n                        total: logTableData.count,\r\n                        showSizeChanger: false,\r\n                    }}\r\n                    rowKey={(record) => record.id}\r\n                />\r\n            </Card>\r\n            <Modal\r\n                width={800}\r\n                title={title}\r\n                visible={visible}\r\n                onOk={() => setVisible(false)}\r\n                afterClose={() => setResponse({})}\r\n                onCancel={() => setVisible(false)}\r\n                forceRender\r\n                okText=\"确定\"\r\n                cancelText=\"取消\"\r\n            >\r\n                {Object.keys(response).length != 0 ? (\r\n                    <ReactJson\r\n                        style={{\r\n                            height: \"500px\",\r\n                            overflow: \"auto\",\r\n                        }}\r\n                        src={response}\r\n                        enableClipboard={false}\r\n                        iconStyle=\"circle\"\r\n                        name={false}\r\n                        collapsed={false}\r\n                        displayDataTypes={false}\r\n                    />\r\n                ) : (\r\n                    <Empty />\r\n                )}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","const global = {\r\n    getCookie(key: any) {\r\n        const data = document.cookie;\r\n\r\n        let startIndex = data.indexOf(key + \"=\");\r\n\r\n        if (startIndex > -1) {\r\n            startIndex = startIndex + key.length + 1;\r\n\r\n            let endIndex = data.indexOf(\";\", startIndex);\r\n\r\n            endIndex = endIndex < 0 ? data.length : endIndex;\r\n\r\n            return decodeURIComponent(data.substring(startIndex, endIndex));\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    setCookie(key: any, value: any, time?: any) {\r\n        const times = time;\r\n        const cur = new Date();\r\n        cur.setTime(cur.getTime() + times * 24 * 3600 * 1000);\r\n        document.cookie =\r\n            key +\r\n            \"=\" +\r\n            encodeURIComponent(value) +\r\n            \";expires=\" +\r\n            (times === undefined ? \"\" : cur.toUTCString());\r\n    },\r\n\r\n    delCookie(key: any) {\r\n        const data = this.getCookie(key);\r\n\r\n        if ((data as any) !== false) {\r\n            this.setCookie(key, data, -1);\r\n        }\r\n    },\r\n\r\n    getStorage(key: string) {\r\n        return localStorage.getItem(key);\r\n    },\r\n\r\n    setStorage(key: string, value: any) {\r\n        return localStorage.setItem(key, value);\r\n    },\r\n\r\n    delStorage(key: string) {\r\n        localStorage.removeItem(key);\r\n    },\r\n};\r\n\r\nexport default global;\r\n"],"names":["instance","axios","interceptors","request","use","url","includes","global","headers","data","method","qs","allowDots","params","time","Date","getTime","response","status","code","message","error","window","location","href","err","Error","userLogin","getUserInfo","getWeather","city","getLocalPosition","getRoleListPage","getRoleList","saveRole","updateRole","deleteRole","id","ids","relationApi","getUserList","saveUser","resetUser","deleteUser","disableUser","getAuthorityPage","getAuthorityList","refreshAuthorityList","relationRole","getLogPage","Search","Input","Authority","useState","loading","setLoading","setResponse","title","setTitle","visible","setVisible","list","count","logTableData","setLogTableData","current","size","likeKey","setParams","columns","dataIndex","fixed","width","align","render","text","record","index","ellipsis","showTitle","placement","onClick","getContent","moment","format","JSON","parse","getData","undefined","then","res","records","total","finally","useEffect","style","marginTop","overflow","placeholder","enterButton","onSearch","display","alignItems","justifyContent","marginBottom","className","dataSource","scroll","x","pagination","pageSize","onChange","showSizeChanger","rowKey","onOk","afterClose","onCancel","forceRender","okText","cancelText","Object","keys","length","height","src","enableClipboard","iconStyle","name","collapsed","displayDataTypes","getCookie","key","document","cookie","startIndex","indexOf","endIndex","decodeURIComponent","substring","setCookie","value","times","cur","setTime","encodeURIComponent","toUTCString","delCookie","this","getStorage","localStorage","getItem","setStorage","setItem","delStorage","removeItem"],"sourceRoot":""}